---
export const prerender = true; 
import BaseLayout from '../../../layouts/BaseLayout.astro';
import RenderPagination from '../../../components/paginatedBlog/renderPagination.tsx';
import { 
    createStaticPathArray,
    createStaticPathArrayForTags, 
 } from "../../../hooks/blogHooks"; 
 import BlogPreview from '../../../components/blogComponents/previewLink.astro';
import { RetrieveImageFromGlob } from "../../../hooks/imageHooks";
import type { PostType } from '../../../util/interface';

export async function getStaticPaths() {
    const PAGE_SIZE : number = 6;
    var allPosts : Array<any> = []
    var totalPages : number = 0
    try{
        allPosts = await Astro.glob("../posts/*.md") ;
       // totalPages = Math.ceil(allPosts.length/PAGE_SIZE);
    } catch (error){
        allPosts = []; 
    }

    var imageFiles = {}
    try{
        imageFiles = import.meta.glob("../../assets/uploads/*"); 
    } catch (error){
        imageFiles = {}
    }

    const allTags = (allPosts.map((post: any) => post.frontmatter.tags).flat()).map(item => item.tag)
    const uniqueTags = [...new Set(allTags)]
    // return uniqueTags.map((tag: string)=> {
    //     var filteredPosts = allPosts.filter((post : any) => post.frontmatter.tags?.some((item : {tag: string})=>item.tag === tag))
    //     return{
    //         params: {tag},
    //         props: {posts: filteredPosts}
    //     }
    // })
}
const { 
    tag,
    page
 } = Astro.params; 
const { 
    totalPages,
    imageFiles, 
    paginatedArray, 
    totalPosts, 
    PAGE_SIZE,
 } = Astro.props; 
//console.log(posts)
const filteredPost = posts.filter((val : any) => val.frontmatter.tags?.some((item :{tag: string}) => item.tag == tag))

---
<BaseLayout pageTitle={tag}>
  <p>Posts tagged with {tag}</p>
  <ul
      class = "[&>li]:my-5"
    >
      {posts && posts.length > 0 && 
          posts.map((item : any)=> <li class = "hover:font-bold hover:underline">
                  <a href={item.url}>{item.frontmatter.title}</a>
              </li>)
      }
  </ul>
</BaseLayout>